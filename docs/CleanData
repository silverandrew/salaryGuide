Here I will walk you through the process of cleaning the data you get from the University. This is the FIRST THING YOU SHOULD DO
before anything else.

I made a really simple to use Python script that should work as long as we receive the data in the same format for years to come.
The script is located in the cleansalaryguide directory.

First, put your dirty CSVs from the University into the raw directory in cleansalary guide. Next, open clean.py and edit
the top variables to point to the correct files. Make sure to change the finalFile variable or you will overwrite the old cleaned CSV.
Now, run the script. It should have created a new, uniform dataset and put it into the finished directory. The next step is
to get that data into the database.

You should set up Postgresql on your own. Instructions here: http://www.postgresql.org/download/

Then, we need to create the database. Run this command from the psql console:

CREATE DATABASE salaryData

**note: you won't have to do this if you restore from the backup in the database directory or if you already have the
database created - in that case, just make sure you are in that database: '$ \connect salaryData'**

Now we will create the table (you can copy/paste this command into psql console):

create table data2014(
department text,
name text,
position text,
positionSal money,
hiredate text,
time text,
howPaid text);

**note: change the table name to dataYEAR for whichever year you are working on - this goes for all other commands in this file**

Then we are going to load our data into that table:

\COPY data2014 FROM 'path/to/newSalaryGuide/cleansalaryguide/finished/2014.csv' CSV HEADER;

Now, we are going to create new IDs for each person based on their name and position salary:

CREATE TABLE assignid (personid serial primary key, name text, positionsalary money, constraint nametotsal unique(name, positionsalary));
INSERT INTO assignid (name, positionsalary) SELECT DISTINCT name, positionSal FROM data2014;
ALTER TABLE data2014 ADD COLUMN personid int;
UPDATE data2014 SET personid = (SELECT personid from assignid WHERE assignid.name = data2014.name AND assignid.positionsalary = data2014.positionSal);

After this, you should destroy the assignid table since we won't be using it anymore:

DROP TABLE assignid

Almost done. Now, we want to change the name format from Lastname, Firstname to Firstname Lastname:

UPDATE data2014 SET name =  (CASE WHEN strpos(name,', ') > 0 THEN substr(name,strpos(name,', ') + 2)  ||' ' || substr(name,0, strpos(name,', ')) ELSE NULL END);

Now, you just need to update table.js to point to the new table you are using and it will update the rest of the app:

module.exports = "data2014"

Finally, export your database and put it into the database directory (this should be done from the command line, not from the psql console):

pg_dump -U USERNAME salaryData > /path/to/newSalaryGuide/database/data2014.pgsql
